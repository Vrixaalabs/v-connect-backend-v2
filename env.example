# Environment Configuration
NODE_ENV=development # development, staging, production

# Server Configuration
PORT=3000
HOST=0.0.0.0

# CORS Configuration
CORS_ORIGIN=http://localhost:5173 # Frontend URL

# Setup Authentication (Change these in production!)
SETUP_AUTH_USERNAME=admin
SETUP_AUTH_PASSWORD=password

# MongoDB Atlas Configuration
MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/database?retryWrites=true&w=majority
MONGODB_DB_NAME=your_database_name

# Redis ElastiCache Configuration
REDIS_HOST=your-redis-cluster.redis.amazonaws.com
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_TLS=true

# AWS S3 Configuration
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_access_key_id
AWS_SECRET_ACCESS_KEY=your_secret_access_key
AWS_S3_BUCKET_NAME=your-s3-bucket-name

# JWT Configuration
JWT_ACCESS_SECRET=your-super-secret-access-token-key-change-this-in-production
JWT_REFRESH_SECRET=your-super-secret-refresh-token-key-change-this-in-production
JWT_ACCESS_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# GraphQL Configuration
GRAPHQL_PATH=/graphql
GRAPHQL_PLAYGROUND=true # Set to false in production

# Socket.IO Configuration
SOCKET_CORS_ORIGIN=http://localhost:3000

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Logging
LOG_LEVEL=info # debug, info, warn, error
LOG_FILE_PATH=logs/app.log

# Security
BCRYPT_ROUNDS=12
SESSION_SECRET=your-session-secret-key

# Health Check
HEALTH_CHECK_INTERVAL=30000

# Loops Email Configuration
LOOPS_API_KEY=your_loops_api_key
LOOPS_WORKSPACE_ID=your_workspace_id
LOOPS_EMAIL_VERIFICATION_TEMPLATE=email_verification_template

# Environment-specific overrides
# For staging: NODE_ENV=staging, GRAPHQL_PLAYGROUND=true, LOG_LEVEL=debug
# For production: NODE_ENV=production, GRAPHQL_PLAYGROUND=false, LOG_LEVEL=info 